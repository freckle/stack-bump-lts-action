name: Bump Stack LTS
description: |
  Update a Stack-based Haskell project to latest LTS and open a Pull Request
  with Changelog outlining the difference from current.

inputs:
  stack-yaml:
    description: "Path to stack.yaml"
    required: true
    default: stack.yaml
  snapshot-yaml:
    description: "Path to custom snapshot, if used"
    required: false
  working-directory:
    description: "Directory for all run steps"
    required: true
    default: .
  actor:
    description: "Login to use instead of github.actor"
    required: true
    default: ""
  dry-run:
    description: Set to "true" to skip building with updated stack.yaml

outputs:
  path:
    description: "File being updated"
    value: ${{ steps.setup.outputs.path }}
  current:
    description: "Current resolver"
    value: ${{ steps.setup.outputs.current }}
  latest:
    description: "Latest LTS resolver"
    value: ${{ steps.setup.outputs.latest }}
  newer-available:
    description: "True if we found a newer resolver"
    value: ${{ steps.update.outputs.newer-available }}
  build-errors:
    description: "True if stack was not able to build"
    value: ${{ steps.build.outputs.build-errors }}
  commit-message:
    description: "Commit message used, including Changelog information"
    value: ${{ steps.commit.outputs.message }}

runs:
  using: composite
  steps:
    - name: Setup
      id: setup
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        if [ -n "${{ inputs.snapshot-yaml }}" ]; then
          path=${{ inputs.snapshot-yaml }}
        else
          path=${{ inputs.stack-yaml }}
        fi
        echo "::set-output name=path::$path"

        current=$(sed '/^resolver: \(.*\)$/!d; s//\1/' "$path")
        echo "::set-output name=current::$current"

        latest=$(
          curl --silent -D - https://www.stackage.org/lts |
            sed '/^location: \/\(.*\)/!d; s//\1/;' |
            tr '\r\n' '\n'
        )
        echo "::set-output name=latest::$latest"

    - name: Update resolver
      id: update
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        current=${{ steps.setup.outputs.current }}
        latest=${{ steps.setup.outputs.latest }}
        path=${{ steps.setup.outputs.path }}

        if [[ "$current" == "$latest" ]]; then
          echo "Up to date ($current)"
          echo "::set-output name=newer-available::false"
          exit 0
        fi

        echo "::set-output name=newer-available::true"

        sed -i 's/^resolver: .*$/resolver: '"$latest"'/' "$path"
    - if: ${{ inputs.dry-run != 'true' && steps.update.outputs.newer-available == 'true' }}
      name: Build
      id: build
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        if ! stack build --dry-run --test --bench; then
          echo "::set-output name=build-errors::true"
        fi
    - if: ${{ steps.update.outputs.newer-available == 'true' }}
      name: Commit
      id: commit
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        current=${{ steps.setup.outputs.current }}
        latest=${{ steps.setup.outputs.latest }}
        stack_yaml=${{ inputs.stack-yaml }}
        stack_yaml_lock=${{ inputs.stack-yaml }}.lock
        path=${{ steps.setup.outputs.path }}

        commit_message() {
          cat <<EOM
        Bump Stackage Resolver to $latest

        See here for changed packages:

        https://rcl.freckle.com/?from=$current&to=$latest

        EOM
        }

        actor=${{ inputs.actor }}
        actor=${actor:-${{ github.actor }}}
        git config --global user.email "$actor@users.noreply.github.com"
        git config --global user.name "$actor"
        git commit "$stack_yaml" "$stack_yaml_lock" "$path" --file <(commit_message)

        # https://github.community/t/set-output-truncates-multiline-strings/16852/5
        output_message=$(commit_message)
        output_message="${output_message//'%'/'%25'}"
        output_message="${output_message//$'\n'/'%0A'}"
        output_message="${output_message//$'\r'/'%0D'}"
        echo "::set-output name=message::$output_message"
